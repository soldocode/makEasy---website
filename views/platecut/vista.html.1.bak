<head>
    <title>PlateCut</title>
	<style>
        canvas { width: 100%; height: 100% }
        body {
                 background-color: #647070;
                 color:#2B2C2C;
                 font-family: Open Sans;
                 font-weight: 100;
                 font-size: 14px;
                }

        input,select,button
            {
             font-family: Open Sans;
             padding:2px;
            }
        button
            {
            background-color: #333333;
            border:0px;
            margin:0px;
            color:#D6D6D6;
            }
        input,select
            {
             margin:0px;
             border:0px;
             color:#2B2C2C;
             background-color:#B2B8B8;
            /*background-color: #647070;*/
            }
        label.campo
            {
            background-color:#838D8D;
            /*background-color:#333333;*/
            display: inline-block;
            color:#D6D6D6;
            padding:3px;
            padding-bottom:3px;
            /*margin-bottom:2px;*/
            width:9em;
            }
        ul
        {
          list-style:none;
          display: inline;
          margin-bottom:2px;
          margin-left:10px;
          padding:3px;
          color:#D6D6D6;
        }
        ul:hover,button:hover
        {
            background:#333333;
            color:#fff;
            cursor:pointer;
        }
        
     
    </style>
    <link rel="stylesheet" type="text/css" href="http://fonts.googleapis.com/css?family=Open Sans">
    <script src="{{=URL('static','js/jquery.js')}}"></script>
</head>


<body>
    <div id='header' style="height:30px;" >
        <h3 style="display:inline;">PIASTRE TAGLIATE A PLASMA</h3>
        <nav style="display:inline; margin-left:50px">
            <ul onclick="action_nuovo()" >Nuovo</ul>
            <ul onclick="action_esporta()">Esporta</ul>
            <ul onclick="action_taglia()">Taglia</ul>
            <ul onclick="action_archivia()">Archivia</ul>
        </nav>
    </div>
    <div id='content'>

        <div style="float:left; display:block; width:25%; background-color:#647070;">
            <form>
                <br>
                <label  id="labelpiastra" class="campo" >sagoma piastra</label>
                <select id="shape" onchange="view_form()">
                    <option value="1">Rettangolare</option>
                    <option value="2">Circolare</option>
                </select>


            </form>
            <p id="data_form">
                <label  id="label1" class="campo" >spessore</label>
                <input value='10' class='value' type="number" id="misure1" style="width:5em;" ><br>

                <label  id="label2" class="campo" >larghezza</label>
                <input value=500 class='value' type="number" id="misure2" style="width:7em;"><br>

                <label  id="label3" class="campo" >altezza</label>
                <input value=500 class='value' type="number" id="misure3" style="width:7em;"><br>
            </p>
            <button onclick="add_holes()">Aggiungi Foratura</button>
        </div>
        <div id="ciao" style="float:left; width:75%; height:80%;"></div>
    </div>
    <div id='footer' style="height:10%; bottom:0px;">
        <img src="{{=URL('static/images/','soldinisnc.png')}}" style="float:right; width:120px; height:40px;">
        <div id="poweredBy" style="z-index:-1; display:inline; float:right; margin-top:5px; margin-right:10px;"> Powered by  </div>
    </div>
        <script src="{{=URL('static','js/three.min.js')}}"></script>
        <script src="{{=URL('static','js/TrackballControls.js')}}"></script>
        <script id="script_shape">

            function make_rect(length,width)
             {
              var shape = new THREE.Shape();
              shape.moveTo( -length/2,-width/2 );
              shape.lineTo( -length/2,width/2  );
              shape.lineTo( length/2,width/2  );
              shape.lineTo( length/2,-width/2  );
              shape.lineTo( -length/2,-width/2 );
              return shape
             }

            function make_circle(diameter)
             {
              var segmentCount = 36;
              var radius = diameter/2;
              var shape = new THREE.Shape();
               shape.moveTo( Math.cos(0) * radius,Math.sin(0) * radius );
               for (var i = 1; i <= segmentCount; i++) 
                {
                 var theta = (i / segmentCount) * Math.PI * 2;
                 shape.lineTo( Math.cos(theta) * radius,Math.sin(theta) * radius  );
                }
               return shape
             }

            function make_hole(diameter,x,y)
             {
              var segmentCount = 24;
              var radius = diameter/2;
              var hpath = new THREE.Path();
               hpath.moveTo(x + Math.cos(0) * radius,y + Math.sin(0) * radius );
               for (var i = 1; i <= segmentCount; i++)
                {
                 var theta = (i / segmentCount) * Math.PI * 2;
                 hpath.lineTo( x + Math.cos(theta) * radius,y + Math.sin(theta) * radius  );
                }
               return hpath
             }

            function action_nuovo()
             {
              alert('Nuovo');
             }

            function action_taglia()
             {
              var jshape={
                          "sagoma":$('#shape').val(),
                          "spessore":$('#misure1').val(),
                          "larghezza":$('#misure2').val(),
                          "altezza":$('#misure3').val()
                          }
              window.location="{{=URL('platecut','index')}} shape:"+jshape;
              alert(jshape.spessore);
             }

            function action_esporta()
             {
              alert('Esporta');
             }

            function action_archivia()
             {
              alert('Archivia');
             }

        </script>

		<script>

            var wWidth = parseFloat($('#ciao').css('width'));
            var wHeight = parseFloat($('#ciao').css('height'));
            var viewSize=$('#misure2').val();
            var aspectRatio=wWidth/wHeight;
			var scene = new THREE.Scene();

            var camera = new THREE.OrthographicCamera(-aspectRatio*viewSize / 1.7,
                                                       aspectRatio* viewSize / 1.7,
                                                       viewSize / 1.5, 
                                                       - viewSize / 1.5, 10000, -10000, 1000 );

            var renderer = new THREE.WebGLRenderer( {alpha: true, antialias:true});
            renderer.shadowMapEnabled = true;
            renderer.shadowMapSoft = true;

            renderer.setSize(wWidth, wHeight);
            document.getElementById("ciao").appendChild(renderer.domElement);

            //add subtle ambient lighting
            var ambientLight = new THREE.AmbientLight(0x222222);
            scene.add(ambientLight);

            var material = new THREE.MeshLambertMaterial({color: 0xEEFFFF, side:1 , overdraw:true});

            var length=$('#misure2').val();
            var height=$('#misure3').val();
            var rectShape=make_rect(length,height);


            var rectGeom = new THREE.ShapeGeometry(rectShape);
            var rectMesh = new THREE.Mesh(rectGeom,material) ;


            var options = {amount: $('#misure1').val(),
                           steps: 1,
                           bevelSegments: 0,
                           bevelSize: 0,
                           bevelThickness: 0
                          };

            var extshape =new THREE.Mesh( new THREE.ExtrudeGeometry(rectShape, options),material);
            // add it to the scene.
            extshape.castShadow = extshape.receiveShadow = true;

            scene.add(extshape);

            // directional lighting
            var directionalLightOne = new THREE.DirectionalLight(0xffffff,0.9);
            directionalLightOne.position.set(0.6, 0.3, 1).normalize();
            scene.add(directionalLightOne);

            var directionalLightTwo = new THREE.DirectionalLight(0xffffff,0.9);
            directionalLightTwo.position.set(-0.6, -0.3, -1).normalize();
            scene.add(directionalLightTwo);


            camera.position.z= -1000;
            camera.position.y= 500;
            camera.position.x= 500;



            var cameraControls = new THREE.TrackballControls(camera,renderer.domElement);



			function render()
            {
				requestAnimationFrame(render);

                //cube.rotation.x += 0.001;
                //cube.rotation.y += 0.001;

                cameraControls.update();
				renderer.render(scene, camera);
			};

			render();
		</script>
</body>

<script src="{{=URL('static','js/jquery.js')}}"></script>
<script>

    $(".value").on("change",update_shape);
    $("#shape").on("change",update_shape);
    var holes=[];
    var id_hole=0;

    function view_form()
    {
        var v=$( '#shape' ).val();
        if (v == 1)
        {
          $( '#label2' ).text('Larghezza');
          $( '#label3' ).text('Altezza');
          $( '#label3' ).fadeIn();
          $( '#misure3' ).fadeIn();
         }
        else
        {
          $( '#label2' ).text("Diametro");
          $( '#label3' ).fadeOut();
          $( '#misure3' ).fadeOut();
        }
    }

    function add_holes()
    {
     id_hole++;
     $("#data_form").append("<br>"+
                            "<label id='for"+id_hole+"' class='campo' >"+id_hole+"a Foratura</label>  "+
                            "<button class='campo id='delete"+id_hole+"'>"+"Elimina</button>"+
                            "<br>");
     $("#data_form").append("<label id='lfor"+id_hole+"' class='campo' >Ø foro</label> "+
                            "<input class='value' type='number' id='dia"+id_hole+"' style='width:5em;' ><br>");
     $("#data_form").append("<label id='lintfo"+id_hole+"' class='campo' >interasse foratura</label> "+
                            "<input class='value' type='number' id='intfo"+id_hole+"' style='width:5em;' ><br>");
     $("#data_form").append("<label id='lnum"+id_hole+"' class='campo' >numero fori</label> "+
                            "<input class='value' type='number' id='num"+id_hole+"' style='width:5em;' ><br>");
     $("#data_form").append("<label id='lpar"+id_hole+"' class='campo' >angolo primo foro</label> "+
                            "<input class='value' type='number' id='par"+id_hole+"' style='width:5em;' ><br>");
     $(".value").on("change",update_shape);
    }

    function update_shape()
    {
     wWidth = parseFloat($('#ciao').css("width"));
     wHeight = parseFloat($('#ciao').css('height'));
     aspectRatio=wWidth/wHeight;
     viewSize=$('#misure2').val();
     camera.left = -aspectRatio*viewSize/1.7 ;
     camera.right = aspectRatio* viewSize /1.7;
     camera.top = viewSize /1.5;
     camera.bottom = - viewSize/1.5 ;
     camera.updateProjectionMatrix();

     scene.remove(extshape);
     var type_shape= $('#shape').val();
     if (type_shape==1)
     {
      length=$('#misure2').val();
      height=$('#misure3').val();
      rectShape=make_rect(length,height);
      rectGeom = new THREE.ShapeGeometry( rectShape );
      rectMesh = new THREE.Mesh(rectGeom,material ) ;
     }
     else
     {
      length=$('#misure2').val();
      rectShape=make_circle(length);
      rectGeom = new THREE.ShapeGeometry( rectShape );
      rectMesh = new THREE.Mesh(rectGeom,material ) ;
     }

     if (id_hole>0)
     {
      for (var i = 1; i <= id_hole; i++)
       {
        var num_holes=$('#num'+i).val();
        var dstart=$('#par'+i).val();
        var int_holes=$('#intfo'+i).val();
        for (var c = 1; c <= num_holes; c++)
        {
         var theta = (((Math.PI * 2)/ num_holes)*c)+((dstart-90)/360*(Math.PI * 2));
         var px= Math.sin(theta) * (int_holes/2);
         var py= Math.cos(theta) * (int_holes/2);
         rectShape.holes.push(make_hole($('#dia'+i).val(),px,py));
        }
       }
     }

     var options = {amount: $('#misure1').val(),
                    steps: 1,
                    bevelSegments: 0,
                    bevelSize: 0,
                    bevelThickness: 0
                    };

     extshape =new THREE.Mesh( new THREE.ExtrudeGeometry(rectShape, options),material);
     // add it to the scene.
     extshape.castShadow = extshape.receiveShadow = true;
     scene.add(extshape);

    }
</script>
